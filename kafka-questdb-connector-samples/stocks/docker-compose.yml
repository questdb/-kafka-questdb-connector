services:
  questdb:
    image: questdb/questdb:8.1.0
    expose:
      - "9000"
    ports:
      - "19000:9000"
    environment:
      - QDB_LINE_DEFAULT_PARTITION_BY=YEAR
      - QDB_PG_SELECT_CACHE_ENABLED=false
  grafana:
    image: grafana/grafana-oss:9.2.1
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    depends_on:
      - questdb
    links:
      - questdb:questdb
    environment:
        - GF_SECURITY_ADMIN_PASSWORD=quest
        - GF_SECURITY_ADMIN_USER=admin
        - GF_USERS_ALLOW_SIGN_UP=false
        - GF_USERS_ALLOW_ORG_CREATE=false
        - GF_AUTH_ANONYMOUS_ENABLED=true
        - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
        - GF_AUTH_ANONYMOUS_ORG_ID=1
  kafka:
    image: apache/kafka:latest
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
  postgres:
    image: debezium/postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  producer:
    image: kafka-questdb-connector-samples-stocks-generator
    build:
      dockerfile: Dockerfile-App
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres:postgres
  connect:
    image: kafka-questdb-connector-samples-connect
    build:
      dockerfile: ./Dockerfile-Connect
      context: .
    ports:
      - "8083:8083"
    depends_on:
      - kafka
    links:
      - kafka:kafka
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      CONFIG_STORAGE_TOPIC: "debezium_connect_config"
      OFFSET_STORAGE_TOPIC: "debezium_connect_offsets"
      STATUS_STORAGE_TOPIC: "debezium_connect_status"